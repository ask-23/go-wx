AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for go-wx weather station'

Parameters:
  EnvironmentName:
    Description: Environment name (e.g., dev, staging, prod)
    Type: String
    Default: dev
    
  VpcId:
    Description: VPC ID where resources will be deployed
    Type: AWS::EC2::VPC::Id
    
  SubnetIds:
    Description: List of subnet IDs for the ECS service
    Type: List<AWS::EC2::Subnet::Id>
    
  InstanceType:
    Description: EC2 instance type for the ECS container instances
    Type: String
    Default: t3.micro
    AllowedValues:
      - t3.micro
      - t3.small
      - t3.medium
      
  KeyName:
    Description: EC2 Key Pair for SSH access
    Type: AWS::EC2::KeyPair::KeyName
    
  DBInstanceClass:
    Description: RDS instance class
    Type: String
    Default: db.t3.micro
    
  DBName:
    Description: Database name
    Type: String
    Default: go_wx
    
  DBUsername:
    Description: Database username
    Type: String
    Default: go_wx
    
  DBPassword:
    Description: Database password
    Type: String
    NoEcho: true
    
  DBAllocatedStorage:
    Description: Database allocated storage (GB)
    Type: Number
    Default: 20
    MinValue: 5
    MaxValue: 1000

Resources:
  # Security Groups
  ECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for go-wx ECS instances
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8000
          ToPort: 8000
          CidrIp: 0.0.0.0/0
          
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for go-wx RDS instance
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref ECSSecurityGroup
          
  # RDS Database
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for go-wx RDS
      SubnetIds: !Ref SubnetIds
      
  Database:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: !Ref DBName
      Engine: mariadb
      EngineVersion: 10.6
      MasterUsername: !Ref DBUsername
      MasterUserPassword: !Ref DBPassword
      DBInstanceClass: !Ref DBInstanceClass
      AllocatedStorage: !Ref DBAllocatedStorage
      StorageType: gp2
      MultiAZ: false
      DBSubnetGroupName: !Ref DBSubnetGroup
      VPCSecurityGroups:
        - !Ref DBSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-go-wx-db
    DeletionPolicy: Snapshot
          
  # ECS Cluster
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${EnvironmentName}-go-wx-cluster
      
  # IAM Role for ECS
  ECSRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
        
  ECSInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref ECSRole
        
  # Launch Template for ECS Instances
  ECSLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub ${EnvironmentName}-go-wx-launch-template
      VersionDescription: Initial version
      LaunchTemplateData:
        ImageId: ami-0c55b159cbfafe1f0  # Amazon Linux 2 ECS-optimized AMI (update with the latest AMI ID)
        InstanceType: !Ref InstanceType
        KeyName: !Ref KeyName
        SecurityGroupIds:
          - !Ref ECSSecurityGroup
        IamInstanceProfile:
          Name: !Ref ECSInstanceProfile
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            echo ECS_CLUSTER=${ECSCluster} >> /etc/ecs/ecs.config
            yum install -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource ECSAutoScalingGroup --region ${AWS::Region}
            
  # Auto Scaling Group for ECS
  ECSAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier: !Ref SubnetIds
      LaunchTemplate:
        LaunchTemplateId: !Ref ECSLaunchTemplate
        Version: !GetAtt ECSLaunchTemplate.LatestVersionNumber
      MinSize: 1
      MaxSize: 3
      DesiredCapacity: 1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-go-wx-ecs-instance
          PropagateAtLaunch: true
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
        Count: 1
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: 1
        MaxBatchSize: 1
        PauseTime: PT15M
        WaitOnResourceSignals: true
        
  # ECS Task Definition
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${EnvironmentName}-go-wx
      NetworkMode: bridge
      RequiresCompatibilities:
        - EC2
      ContainerDefinitions:
        - Name: go-wx
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/go-wx:latest
          Essential: true
          Memory: 512
          PortMappings:
            - ContainerPort: 8080
              HostPort: 8080
              Protocol: tcp
            - ContainerPort: 8000
              HostPort: 8000
              Protocol: tcp
          Environment:
            - Name: TZ
              Value: UTC
            - Name: DB_HOST
              Value: !GetAtt Database.Endpoint.Address
            - Name: DB_PORT
              Value: !GetAtt Database.Endpoint.Port
            - Name: DB_NAME
              Value: !Ref DBName
            - Name: DB_USER
              Value: !Ref DBUsername
            - Name: DB_PASSWORD
              Value: !Ref DBPassword
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref LogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: go-wx
              
  # ECS Service
  ECSService:
    Type: AWS::ECS::Service
    DependsOn: Database
    Properties:
      ServiceName: !Sub ${EnvironmentName}-go-wx-service
      Cluster: !Ref ECSCluster
      TaskDefinition: !Ref TaskDefinition
      DesiredCount: 1
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50
        
  # CloudWatch Logs
  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /ecs/${EnvironmentName}-go-wx
      RetentionInDays: 30

Outputs:
  ClusterName:
    Description: ECS Cluster Name
    Value: !Ref ECSCluster
    
  DatabaseEndpoint:
    Description: Database Endpoint
    Value: !GetAtt Database.Endpoint.Address
    
  DatabasePort:
    Description: Database Port
    Value: !GetAtt Database.Endpoint.Port
    
  ServiceURL:
    Description: URL to access the go-wx service
    Value: !Sub http://${ECSAutoScalingGroup.DNSName}:8080 